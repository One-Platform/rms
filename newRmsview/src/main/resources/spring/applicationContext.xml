<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:onejpa="http://com.sinosoft.one/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://com.sinosoft.one/schema/data/jpa http://com.sinosoft.one/schema/data/jpa/one-data-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.sinosoft.one">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceUnitName" value="defaultPU"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/> 
		<property name="jpaProperties">
			<props>
				<!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.EhCacheRegionFactory</prop>-->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory</prop>
				<!-- <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="com.sinosoft.one.rms.utils.Hibernates">
                <constructor-arg ref="dataSource"/>
            </bean>
        </property>
    </bean>
    
	<!-- Spring Data Jpa配置 -->
 	<onejpa:repositories base-package="com.sinosoft.one.rms"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	
		
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- production/local development环境 -->
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />
		
		<!-- 数据源配置, 使用DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<!-- <property name="defaultAutoCommit" value="false" /> -->
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>

		<!-- 数据权限数据源配置 用于数据权限SQL注入的代理源 
	<bean id="realDataSource" class="com.sinosoft.one.rms.client.datasource.RmsDataSource">
    	<property name="rmsSQLParser" ref="rmsSQLParser"></property>
    	<property name="dataRuleFactoryPostProcessor" ref="dataRuleFactory"></property>
		<constructor-arg ref="dataSource" />
    </bean>
	-->
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->

         <!-- 调整sql的时候请加上-->
         <!--<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
             <constructor-arg ref="dataSourceSpied"/>
         </bean>-->
	
	
	<!-- myfilter -->
	<bean id="loginFilter" class="com.sinosoft.one.rms.client.shiro.LoginFilter"></bean>
	<bean id="simpleFilter" class="com.sinosoft.one.rms.client.shiro.SimpleFilter"></bean>
	
	<!-- 基于Form表单的身份验证过滤器 -->
	<!-- <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
	    <property name="usernameParam" value="userCode"/>
	    <property name="passwordParam" value="passWord"/>
	</bean> -->
	
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
    	<property name="securityManager" ref="securityManager"/>
		<property name="loginUrl" value="/login.jsp"/>
		<property name="successUrl" value="/login"/>
		<property name="filters">
			<map>
				<entry key="loginFilter" value-ref="loginFilter"/>
				<!-- <entry key="simpleFilter" value-ref="simpleFilter"/> -->
				<!-- <entry key="authc" value-ref="formAuthenticationFilter"/> -->
        	</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/ =anon
				/login/company/** =anon
				/login/checkUser** = anon
				/login/logout = anon
				/js/** = anon
				/css/** = anon
				/images/** = anon
				 
		 		/** = loginFilter 
		 		<!-- /** = simpleFilter-->
		 		<!-- /** = authc -->
		 	</value>
		</property>
	</bean>
	
	
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="realm" ref="ShiroDbSimpleRealm" /> -->
		<property name="realm" ref="shiroDbRealm" />
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>

<!-- 	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher"></bean>
 -->
	<!-- 用户授权信息Cache -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>